http {

    server_tokens off;

    #upgrade websocket connection
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    #all node containers
    upstream node-containers {
        server api:3000;
    }
 
    # proxy_cache_path /var/cahe/nginx keys_zone=cache:10m max_size=1g inactive=10m levels=1:2;

    #rate limiting
    # geo $limit {
    #     default 1;
    #     10.0.0.0/8 0;
    #     192.168.0.0/24 0;
    # }

    # map $limit $limit_key {
    #     0 "";
    #     1 $binary_remote_addr;
    # }
    
    limit_req_zone $binary_remote_addr zone=ip:10m rate=60r/m;

    

    #server instance
    server {
        listen 80; #ipv4

		server_name _; #here the domain

        limit_req zone=ip burst=5 delay=8;
        limit_req_status 429;

		location / {
	 		proxy_pass http://node-containers/; #reverse proxy
		}

        location /graphql {
            proxy_pass http://node-containers/graphql; #reverse proxy
            
            #upgrade connection
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;

            #cache
            # proxy_cache cache;
            # add_header X-Proxy-Cache $upstream_cache_status;

            #timeouts
            proxy_read_timeout 60s; #If the proxied server does not transmit anything within this time, the connection is closed.
        }
    }
}
   
events { }