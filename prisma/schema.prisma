// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Location {
  type        String
  coordinates Float[]
}

//HOW THE WEEK IS ORGANIZED
// {
//   giorno: lunedi,
//   orario: {  
//     apertura,
//     chiusura
//   }
// }

type Schedule {
  opening String 
  closing   String

}

type Day {
  name String
  schedule Schedule
}

type Week {
  monday      Day
  tuesday     Day
  wednesday   Day
  thursday    Day
  friday      Day
  saturday    Day
  sunday      Day
}

type LightShop {
  name        String
  city        String
}

model Product {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  price             Float
  colors            String[]
  sizes             String[] //EX: ["xl (50)", "s(38)"]
  macroCategory     String //EX: "Giacca"
  microCategory     String  //EX: ["In flanella", "in pelle", "di pile"]
  gender            String //EX: ["F", "M"]
  brand             String
  location          Location
  shopId            String  @db.ObjectId
  firebaseShopId    String //TODO spostare firebaseShopId in shop.firebaseId
  shop              LightShop
  photos            String[]
  createdAt         DateTime
  updatedAt         DateTime 
}

type Opening {
  days        Int[]
  hours       String[]
}

type AddressShop {
  postcode    String 
  city        String
  street      String
  location    Location
}

model Shop {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  status                String
  opening               Opening
  address               AddressShop
  description           String?
  piva                  String
  phone                 String
  createdAt             DateTime
  firebaseId            String
  photo                 String?
  macroCategory         String[]
  genders               String[]
}

model Cap {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  cap                   String
  city                  String
  location              Location
}

//PRODUCT SEARCH INDEX
//{
//  "mappings": {
//    "dynamic": false,
//    "fields": {
//       "location": {
//         "type": "geo"
//       },
//       "name": {
//         "analyzer": "lucene.italian",
//         "type": "string"
//       }
//     }
//   }
// }

//SHOP SEARCH INDEX
//{
//  "mappings": {
//    "dynamic": false,
//    "fields": {
//      "address": {
//        "fields": {
//          "location": {
//            "type": "geo"
//          }
//        },
//       "type": "document"
//      }
//    }
//  }
//}

//{
//"address.location": "2dsphere"  
//}